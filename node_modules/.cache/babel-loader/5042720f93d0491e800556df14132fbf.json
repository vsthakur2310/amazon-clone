{"ast":null,"code":"import Product from \"./Product\";\nexport const initialState = {\n  cart: []\n}; //Selector\n\nexport const getCartTotal = cart => cart === null || cart === void 0 ? void 0 : cart.reduce((amount, item) => item.price + amount, 0);\n\nconst reducer = (state, action) => {\n  console.log(action);\n\n  switch (action.type) {\n    case \"ADD_TO_CART\":\n      return { ...state,\n        cart: [...state.cart, action.item]\n      };\n\n    case \"REMOVE_FROM_CART\":\n      //   return {\n      //     ...state,\n      //     cart: state.cart.filter(item => item.id !== action.id)\n      //   }\n      const index = state.cart.findIndex(cartItem => cartItem.id === action.id);\n      let newCart = [...state.cart];\n\n      if (index >= 0) {\n        newCart.splice(index, 1);\n      } else {\n        console.warn(\"cant remove Product (id: ${action.id}) as its not in cart\");\n      }\n\n      return { ...state,\n        cart: newCart\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/V.S. Thakur/Documents/pro/amazon-clone/amazon-clone/src/reducer.js"],"names":["Product","initialState","cart","getCartTotal","reduce","amount","item","price","reducer","state","action","console","log","type","index","findIndex","cartItem","id","newCart","splice","warn"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,WAApB;AAEA,OAAO,MAAMC,YAAY,GAAG;AAC1BC,EAAAA,IAAI,EAAE;AADoB,CAArB,C,CAIP;;AAEA,OAAO,MAAMC,YAAY,GAAID,IAAD,IAC1BA,IAD0B,aAC1BA,IAD0B,uBAC1BA,IAAI,CAAEE,MAAN,CAAa,CAACC,MAAD,EAASC,IAAT,KAAkBA,IAAI,CAACC,KAAL,GAAaF,MAA5C,EAAoD,CAApD,CADK;;AAGP,MAAMG,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,UAAQA,MAAM,CAACG,IAAf;AACE,SAAK,aAAL;AACE,aAAO,EACL,GAAGJ,KADE;AAELP,QAAAA,IAAI,EAAE,CAAC,GAAGO,KAAK,CAACP,IAAV,EAAgBQ,MAAM,CAACJ,IAAvB;AAFD,OAAP;;AAKF,SAAK,kBAAL;AACE;AACA;AACA;AACA;AACA,YAAMQ,KAAK,GAAGL,KAAK,CAACP,IAAN,CAAWa,SAAX,CACXC,QAAD,IAAcA,QAAQ,CAACC,EAAT,KAAgBP,MAAM,CAACO,EADzB,CAAd;AAGA,UAAIC,OAAO,GAAG,CAAC,GAAGT,KAAK,CAACP,IAAV,CAAd;;AAEA,UAAIY,KAAK,IAAI,CAAb,EAAgB;AACdI,QAAAA,OAAO,CAACC,MAAR,CAAeL,KAAf,EAAsB,CAAtB;AACD,OAFD,MAEO;AACLH,QAAAA,OAAO,CAACS,IAAR,CACE,2DADF;AAGD;;AAED,aAAO,EACH,GAAGX,KADA;AAEHP,QAAAA,IAAI,EAAEgB;AAFH,OAAP;;AAKF;AACE,aAAOT,KAAP;AA/BJ;AAiCD,CAnCD;;AAqCA,eAAeD,OAAf","sourcesContent":["import Product from \"./Product\";\r\n\r\nexport const initialState = {\r\n  cart: [],\r\n};\r\n\r\n//Selector\r\n\r\nexport const getCartTotal = (cart) =>\r\n  cart?.reduce((amount, item) => item.price + amount, 0);\r\n\r\nconst reducer = (state, action) => {\r\n  console.log(action);\r\n  switch (action.type) {\r\n    case \"ADD_TO_CART\":\r\n      return {\r\n        ...state,\r\n        cart: [...state.cart, action.item],\r\n      };\r\n\r\n    case \"REMOVE_FROM_CART\":\r\n      //   return {\r\n      //     ...state,\r\n      //     cart: state.cart.filter(item => item.id !== action.id)\r\n      //   }\r\n      const index = state.cart.findIndex(\r\n        (cartItem) => cartItem.id === action.id\r\n      );\r\n      let newCart = [...state.cart];\r\n\r\n      if (index >= 0) {\r\n        newCart.splice(index, 1);\r\n      } else {\r\n        console.warn(\r\n          \"cant remove Product (id: ${action.id}) as its not in cart\"\r\n        )\r\n      }\r\n\r\n      return {\r\n          ...state,\r\n          cart: newCart\r\n      }\r\n      \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}